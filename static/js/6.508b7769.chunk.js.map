{"version":3,"sources":["selectors/friends-selectors.ts","components/Friends/Friend.styled.ts","components/Friends/Friend.tsx","pages/FriendsPage/FriendsPage.styled.ts","pages/FriendsPage/FriendsPage.tsx"],"names":["selectUserFriends","createSelector","state","friendsPage","friends","selectUserFriendsAmount","length","FriendElement","styled","Col","FriendElementCard","Card","React","memo","friend","to","id","bordered","hoverable","cover","alt","src","photos","large","userPhoto","Meta","title","name","description","status","slice","FriendsPageHeader","h2","FriendsSearchInput","Input","SearchIcon","SearchOutlined","withAuthRedirect","useState","searchTerm","setSearchTerm","useSelector","friendsAmount","dispatch","useDispatch","useEffect","requestFriends","HeartOutlined","placeholder","onChange","event","target","value","filter","val","toLowerCase","includes","map","f","key","Preloader"],"mappings":"oHACA,gFAIaA,EAAoBC,YAC7B,CAHgB,SAACC,GAAD,OAAyBA,EAAMC,eAI/C,SAAAA,GAAW,OAAIA,EAAYC,WAGlBC,EAA0BJ,YACnC,CAACD,IACD,SAAAA,GAAiB,OAAIA,EAAkBM,W,8KCT9BC,EAAgBC,YAAOC,IAAPD,CAAH,0EAKbE,EAAoBF,YAAOG,IAAPH,CAAH,6CC0BfI,MAAMC,MAvBS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC5B,OACI,kBAACP,EAAD,KACI,kBAAC,IAAD,CAASQ,GAAI,YAAcD,EAAOE,IAC9B,kBAACN,EAAD,CACIO,UAAU,EACVC,WAAS,EACTC,MAAO,yBACHC,IAAI,eACJC,IAA4B,MAAvBP,EAAOQ,OAAOC,MAAgBT,EAAOQ,OAAOC,MAAQC,OAG7D,kBAACC,EAAA,EAAD,CACIC,MAAOZ,EAAOa,KACdC,YAAad,EAAOe,QAAUf,EAAOe,OAAOvB,QAAU,GAAzC,UACNQ,EAAOe,OAAOC,MAAM,EAAG,IADjB,OAEPhB,EAAOe,e,sDCvBxBE,EAAoBvB,IAAOwB,GAAV,oDAIjBC,EAAqBzB,YAAO0B,IAAP1B,CAAH,6CAIlB2B,EAAa3B,YAAO4B,IAAP5B,CAAH,mDCgDR6B,uBAjDS,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACnBC,EADmB,KACPC,EADO,KAGpBpC,EAAUqC,YAAYzC,KACtB0C,EAAgBD,YAAYpC,KAC5BsC,EAAWC,cAMjB,OAJAC,qBAAU,WACNF,EAASG,iBACV,CAACH,EAAUD,IAETA,EAKD,6BACI,kBAACX,EAAD,KACI,kBAACgB,EAAA,EAAD,MADJ,6DACkCL,EADlC,KAGA,6BACI,kBAACT,EAAD,CACIe,YAAa,oCACbC,SAAU,SAAAC,GACNV,EAAcU,EAAMC,OAAOC,UAEnC,kBAACjB,EAAD,OAEJ,6BACA,kBAAC,IAAD,KAEQ/B,EACKiD,QAAO,SAAAC,GACJ,MAAmB,KAAff,GAEOe,EAAI3B,KAAK4B,cAAcC,SAASjB,EAAWgB,eAD3CD,OACJ,KAIVG,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CACN5C,OAAQ4C,EACRC,IAAKD,EAAE1C,UA7BpB,kBAAC4C,EAAA,EAAD","file":"static/js/6.508b7769.chunk.js","sourcesContent":["import {AppStateType} from \"../redux/store/redux-store\";\r\nimport { createSelector } from 'reselect'\r\n\r\nconst friendsPage = (state: AppStateType) => state.friendsPage\r\n\r\nexport const selectUserFriends = createSelector(\r\n    [friendsPage],\r\n    friendsPage => friendsPage.friends\r\n)\r\n\r\nexport const selectUserFriendsAmount = createSelector(\r\n    [selectUserFriends],\r\n    selectUserFriends => selectUserFriends.length\r\n)\r\n","import styled from \"styled-components\";\r\nimport {Card, Col} from \"antd\";\r\n\r\nexport const FriendElement = styled(Col)`\r\n  margin: 0 auto;\r\n  padding: 10px 10px 0 0;\r\n`\r\n\r\nexport const FriendElementCard = styled(Card)`\r\n  width: 150px;\r\n`\r\n","import React, {FC} from 'react';\r\nimport {UserType} from \"../../types/types\";\r\nimport Meta from \"antd/es/card/Meta\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FriendElement, FriendElementCard} from './Friend.styled';\r\n\r\ntype PropsType = {\r\n    friend: UserType\r\n}\r\n\r\nconst Friend: FC<PropsType> = ({friend}) => {\r\n    return (\r\n        <FriendElement>\r\n            <NavLink to={'/profile/' + friend.id}>\r\n                <FriendElementCard\r\n                    bordered={true}\r\n                    hoverable\r\n                    cover={<img\r\n                        alt=\"friend photo\"\r\n                        src={friend.photos.large != null ? friend.photos.large : userPhoto}/>\r\n                    }\r\n                >\r\n                    <Meta\r\n                        title={friend.name}\r\n                        description={friend.status && friend.status.length >= 20 ?\r\n                            `${friend.status.slice(0, 20)}...`\r\n                            : friend.status}/>\r\n                </FriendElementCard>\r\n            </NavLink>\r\n        </FriendElement>\r\n    )\r\n};\r\n\r\nexport default React.memo(Friend);","import styled from \"styled-components\";\r\nimport {Input} from \"antd\";\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\n\r\nexport const FriendsPageHeader = styled.h2`\r\n  padding-bottom: 9px;\r\n`\r\n\r\nexport const FriendsSearchInput = styled(Input)`\r\n  width: 200px;\r\n`\r\n\r\nexport const SearchIcon = styled(SearchOutlined)`\r\n  padding-left: 10px;\r\n`","import React, {FC, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {requestFriends} from \"../../redux/friends-reducer\";\r\nimport {Row} from \"antd\";\r\nimport Friend from \"../../components/Friends/Friend\";\r\nimport {HeartOutlined} from \"@ant-design/icons\";\r\nimport Preloader from \"../../components/common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {selectUserFriends, selectUserFriendsAmount} from \"../../selectors/friends-selectors\";\r\nimport {FriendsPageHeader, FriendsSearchInput, SearchIcon} from \"./FriendsPage.styled\";\r\n\r\nconst FriendsPage: FC = () => {\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const friends = useSelector(selectUserFriends)\r\n    const friendsAmount = useSelector(selectUserFriendsAmount)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(requestFriends());\r\n    }, [dispatch, friendsAmount])\r\n\r\n    if (!friendsAmount) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FriendsPageHeader>\r\n                <HeartOutlined/> Мои друзья ({friendsAmount})\r\n            </FriendsPageHeader>\r\n            <div>\r\n                <FriendsSearchInput\r\n                    placeholder={'Поиск...'}\r\n                    onChange={event => {\r\n                        setSearchTerm(event.target.value)\r\n                    }}/>\r\n                <SearchIcon/>\r\n            </div>\r\n            <br/>\r\n            <Row>\r\n                {\r\n                    friends\r\n                        .filter(val => {\r\n                            if (searchTerm === \"\") {\r\n                                return val;\r\n                            } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                return val;\r\n                            }\r\n                        })\r\n                        .map(f => <Friend\r\n                            friend={f}\r\n                            key={f.id}\r\n                        />)\r\n                }\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withAuthRedirect(FriendsPage);"],"sourceRoot":""}