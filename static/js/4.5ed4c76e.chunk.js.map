{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","alt","src","imgLink","to","dialogName","activeClassName","activeLink","name","Message","message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","SendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,WAAa,4BAA4B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,2B,sFCarPC,EAVK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAI,GAAGC,IAAKP,EAAMQ,UACvB,kBAAC,IAAD,CAASC,GAAIR,EAAME,UAAWC,IAAEM,WAAYC,gBAAiBP,IAAEQ,YAAaZ,EAAMa,QCC/EC,EAPC,SAACd,GACb,OACI,yBAAKG,UAAWC,IAAEW,SAAUf,EAAMe,U,iCCCpCC,EAAeC,YAAiB,KAoBvBC,cAAU,CAACC,KAAM,wBAAjBD,EAlBe,SAAClB,GAC3B,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,6BACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAM,iBACNc,YAAa,wBAGrB,6BACI,6CCYDC,EAzBC,SAAC5B,GACb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAEhC,GAAIA,GAAIgC,EAAEhC,GAC/BM,QAAS0B,EAAE1B,aAClE4B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEpC,QAMrF,OACI,yBAAKC,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEmC,cACbR,GAEL,yBAAK5B,UAAWC,IAAEiC,UACd,6BAAMD,GACN,kBAAC,EAAD,CAAgBhB,SAXR,SAACoB,GACjBxC,EAAMyC,YAAYD,EAAOE,sB,yDCX7BC,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,S,OCkBRE,sBACXC,aAhBkB,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,UDTR,SAACQ,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKpD,MAAM4C,OAET,kBAACM,EAAcE,KAAKpD,OAFI,kBAAC,IAAD,CAAUS,GAAG,eAJT,GAEX4C,IAAMH,WAWtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCI9DL,CAGblB","file":"static/js/4.5ed4c76e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2sgjw\",\"dialogsItems\":\"Dialogs_dialogsItems__PWwki\",\"dialog\":\"Dialogs_dialog__11VTP\",\"dialogName\":\"Dialogs_dialogName__13PH_\",\"activeLink\":\"Dialogs_activeLink__30sOw\",\"messages\":\"Dialogs_messages__1zSyE\",\"message\":\"Dialogs_message__z1c6H\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst  DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img alt='' src={props.imgLink}/>\r\n            <NavLink to={path} className={s.dialogName} activeClassName={s.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nexport const AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength100]}\r\n                    name={\"newMessageBody\"}\r\n                    placeholder={\"Enter your message\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}\r\n                                                               imgLink={d.imgLink}/>);\r\n    let messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.SendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        SendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}