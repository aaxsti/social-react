{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/working.png","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","photos","large","src","noPhotoPic","profileInfo","infoList","contacts","facebook","vk","twitter","instagram","github","fullName","lookingForAJob","working","workingImage","lookingForAJobDescription","Preloader","Post","posts","item","alt","message","likesCount","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","map","p","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.fd11cd1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__8OriO\",\"profileInfo\":\"ProfileInfo_profileInfo__1OXGY\",\"infoList\":\"ProfileInfo_infoList__2awl3\",\"workingImage\":\"ProfileInfo_workingImage__373HE\",\"noPhotoPic\":\"ProfileInfo_noPhotoPic__DoDze\"};","module.exports = __webpack_public_path__ + \"static/media/working.d40463a4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3koDc\",\"posts\":\"MyPosts_posts__2jhSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__27q3Q\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport working from \"../../../assets/images/working.png\";\r\nimport noPhotoPic from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img alt='' src='https://klike.net/uploads/posts/2019-09/1568880410_2.jpg'/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n\r\n                {profile.photos.large != null ?\r\n                    <img src={profile.photos.large}/>\r\n                    : <img src={noPhotoPic} className={s.noPhotoPic}/>}\r\n\r\n                <div className={s.profileInfo}>\r\n\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                    <h3>My contacts:</h3>\r\n                    <ul className={s.infoList}>\r\n                        <li>Facebook: {profile.contacts.facebook}</li>\r\n                        <li>VK: {profile.contacts.vk}</li>\r\n                        <li>Twitter: {profile.contacts.twitter}</li>\r\n                        <li>Instagram: {profile.contacts.instagram}</li>\r\n                        <li>Github: {profile.contacts.github}</li>\r\n                    </ul>\r\n                    <h3>Job:</h3>\r\n                    <ul className={s.infoList}>\r\n                        <li>Full name: {profile.fullName}</li>\r\n                        <li>Job: {profile.lookingForAJob ?\r\n                            <img src={working} className={s.workingImage}/> : null}</li>\r\n                        <li>Job preferences: {profile.lookingForAJobDescription}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.item}>\r\n                <img alt ='' src='https://picsum.photos/100/100'/>\r\n                {props.message}\r\n                <div>\r\n                    <span>{props.likesCount} likes</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;\r\n\r\n\r\n","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(30);\r\n\r\nexport const AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"newPostText\"}\r\n                    placeholder={\"Write your post\"}\r\n                    validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport AddNewPostForm from \"./AddNewPostForm/AddNewPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map((p) => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}