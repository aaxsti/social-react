{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","components/Navbar/Friends/Friends.module.css","components/Navbar/Friends/Friend/Friend.module.css","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Navbar/Friends/Friend/Friend.jsx","components/Navbar/Friends/Friends.jsx","components/Navbar/Friends/FriendsContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","messages","id","message","dialogs","name","imgLink","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","userFollow","userId","post","userUnfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Friend","props","className","s","friends","alt","src","Friends","friendElements","map","f","key","FriendsContainer","connect","sidebar","Navbar","nav","item","to","activeClassName","activeLink","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","unfollow","follow","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummeryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","position","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.c7d8c00c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.57b075ed.png\";","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Привет'},\r\n        {id: 2, message: 'Как дела?'},\r\n        {id: 3, message: 'Ку!'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Maxim', imgLink: 'https://picsum.photos/400/400'},\r\n        {id: 2, name: 'Ilya', imgLink: 'https://picsum.photos/100/100'},\r\n        {id: 3, name: 'Ivan', imgLink: 'https://picsum.photos/200/200'},\r\n        {id: 4, name: 'Stas', imgLink: 'https://picsum.photos/80/80'},\r\n        {id: 5, name: 'Sasha', imgLink: 'https://picsum.photos/90/90'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3rlnR\",\"item\":\"Navbar_item__3sOUc\",\"activeLink\":\"Navbar_activeLink__35ptm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2FiXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friend_friends__29Sel\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.b159c782.svg\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"31c269a2-4de2-4018-98f9-0e5ea8f600fd\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    userFollow(userId) {\r\n        return instance.post(`follow/${userId}`, {});\r\n    },\r\n\r\n    userUnfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n};\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Friend.module.css'\r\n\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <nav className={s.friends}>\r\n            <img alt='' src={props.imgLink}/>\r\n            {props.name}\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n    let friendElements = props.friends.map((f) => <Friend name={f.name} key={f.id} imgLink={f.imgLink}/>);\r\n\r\n    return (\r\n        <nav className={s.friends}>\r\n            Friends\r\n\r\n            {friendElements}\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Friends;","import React from 'react';\r\nimport Friends from \"./Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends\r\n    }\r\n};\r\n\r\nlet FriendsContainer = connect(mapStateToProps) (Friends);\r\n\r\n\r\nexport default FriendsContainer;","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsContainer from \"./Friends/FriendsContainer\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n\r\n            <div className={s.item}>\r\n                <FriendsContainer/>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;\r\n\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music;\r\n\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users : updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users : updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.userFollow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.userUnfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className={styles.paginator}>\r\n\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber((portionNumber + 1))\r\n            }}>NEXT</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              unfollow(user.id);\r\n                                          }}>\r\n                                    Unfollow</button>\r\n\r\n                                : <button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              follow(user.id)\r\n                                          }}>\r\n                                    Follow</button>\r\n                            }\r\n\r\n                        </div>\r\n                    </span>\r\n            <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, onPageChanged, pageSize, users, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.users}>\r\n\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n            />\r\n            <div>\r\n                {users.map(u => <User\r\n                    user={u}\r\n                    key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    })\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt=''\r\n                 src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRUcUCuXMald5MexzWYz8GwZAu-vqSr0JZOFw&usqp=CAU'/>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n};\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {logout}))(HeaderContainer);","import {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"remember me\", [], Input, {type: \"checkbox\"}, \"Remember me\")}\r\n\r\n            {error &&\r\n            <div className={style.formSummeryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Maxim', imgLink: 'https://picsum.photos/400/400'},\r\n        {id: 2, name: 'Ilya', imgLink: 'https://picsum.photos/100/100'},\r\n        {id: 3, name: 'Ivan', imgLink: 'https://picsum.photos/200/200'},\r\n    ],\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\nimport './App.css';\nimport {withRouter, Route, HashRouter} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport Login from \"./components/Login/Login\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport withSuspense from \"./hoc/withSuspense\";\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path='/dialogs'\n                           render={withSuspense(DialogsContainer)}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SocialNetworkApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n}\n\nexport default SocialNetworkApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialNetworkApp from \"./App\";\n\n\nReactDOM.render(<SocialNetworkApp/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={validators}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader  = (props) => {\r\n    return <div style={{backgroundColor: '#e7f0ff', position: \"absolute\"}}>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3FZxU\",\"error\":\"FormsControls_error__2wZcU\",\"formSummeryError\":\"FormsControls_formSummeryError__1a8XU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3Bbc9\",\"users\":\"Users_users__2JqzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2p4Lg\",\"pageNumbers\":\"Paginator_pageNumbers__nScyD\",\"paginator\":\"Paginator_paginator__1u4Wr\",\"pageNumber\":\"Paginator_pageNumber__3RwdL\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__j_GE9\",\"loginBlock\":\"Header_loginBlock__djBAF\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, как дела?', likesCount: 25},\r\n        {id: 2, message: 'Это мой первый пост', likesCount: 15},\r\n        {id: 3, message: 'Куку', likesCount: 15},\r\n        {id: 4, message: 'Че как?', likesCount: 15},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}