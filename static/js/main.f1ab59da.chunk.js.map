{"version":3,"sources":["components/common/Preloader/Preloader.tsx","components/forms/FormsControls/FormsControls.module.css","utils/validators.ts","redux/profile-reducer.ts","hoc/withAuthRedirect.tsx","api/dialogs-api.ts","redux/dialogs-reducer.ts","assets/images/user.png","redux/friends-reducer.ts","api/chat-api.ts","redux/chat-reducer.ts","assets/about/github.svg","assets/about/linkedin.svg","assets/about/vkontakte.svg","assets/about/telegram.svg","assets/about/gmail.svg","assets/images/preloader.svg","assets/images/sad.svg","assets/images/belarus.svg","assets/images/logo.svg","api/api.ts","components/AppFooter/AppFooter.styled.ts","components/AppFooter/AppFooter.tsx","selectors/app-selectors.ts","components/AppSidebar/AppSidebar.styled.ts","components/AppSidebar/AppSidebar.tsx","components/forms/SignUpForm/SignUpForm.styled.ts","components/forms/SignUpForm/SignUpForm.tsx","pages/SignUpPage/SignUpPage.tsx","hoc/withSuspense.tsx","pages/ErrorPage/ErrorPage.tsx","components/Users/User.styled.ts","components/Users/User.tsx","selectors/users-selectors.ts","components/forms/UsersSearchForm/UsersSearchForm.styled.ts","components/forms/UsersSearchForm/UsersSearchForm.tsx","utils/object-helpers.ts","redux/users-reducer.ts","pages/UsersPage/UsersPage.styles.ts","pages/UsersPage/UsersPage.tsx","components/AppContent/AppContent.styled.ts","components/forms/LoginForm/LoginForm.styled.ts","components/forms/LoginForm/LoginForm.tsx","api/auth-api.ts","redux/auth-reducer.ts","pages/LoginPage/LoginPage.tsx","components/AppContent/AppContent.tsx","components/AppHeader/AppHeader.styled.ts","components/AppHeader/AppHeader.tsx","components/App/App.styled.ts","redux/app-reducer.ts","components/App/App.tsx","redux/news-reducer.ts","redux/store/redux-store.ts","Global.styled.ts","index.tsx","selectors/auth-selectors.ts","api/users-api.ts","api/profile-api.ts","components/forms/FormsControls/FormsControls.tsx"],"names":["PreloaderWrapper","styled","div","Preloader","src","preloader","alt","module","exports","required","value","maxLengthCreator","maxLength","length","initialState","posts","id","v4","message","likesCount","date","Date","profile","status","editMode","actions","addPostActionCreator","newPostText","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","userId","dispatch","a","profileAPI","getProfile","data","getStatus","updateStatus","resultCode","ResultCodesEnum","Success","toast","info","savePhoto","file","saveProfile","getState","auth","success","messages","profileReducer","state","action","newPost","filter","p","mapStateToPropsForRedirect","isAuth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","dialogsAPI","instance","put","then","res","get","body","post","dialogs","selectedUser","startDialog","getDialogs","getDialogMessages","items","sendDialogMessage","dialogsReducer","friends","requestFriends","usersAPI","getUsers","friendsReducer","subscribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","payload","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","chatReducer","map","m","index","array","axios","create","withCredentials","baseURL","headers","FooterWrapper","Footer","AboutBlock","AboutBlockHeader","h3","IconsBlock","IconsBlockElement","AboutBlockInfo","AppFooter","href","githubIcon","linkedinIcon","vkIcon","telegramIcon","gmailIcon","selectInitialized","createSelector","app","initialized","MenuWrapper","Menu","SidebarWrapper","Sider","AppSidebar","width","mode","Item","key","HomeOutlined","HeartOutlined","ExceptionOutlined","UserOutlined","MessageOutlined","WechatOutlined","Divider","InfoCircleOutlined","SignUpFormWrapper","Col","SignUpFormElement","Row","SignUpForm","placeholder","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","style","paddingBottom","paddingRight","paddingTop","format","Group","SignUpPage","h1","useSelector","selectIsAuth","UserAddOutlined","withSuspense","Suspense","fallback","React","memo","ErrorSadPic","UserItem","CountryFlagIcon","img","UserNameLink","NavLink","UserListContent","UserCountry","UserItemRow","UserStatus","user","followingInProgress","unfollow","follow","small","userPhoto","size","xs","sm","md","lg","xl","xxl","name","BelarusFlag","followed","disabled","some","onClick","UserDeleteOutlined","usersPage","users","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getFollowingInProgress","getUsersFilter","SearchUserInput","Input","SearchTermSelect","Select","UsersSearchForm","onFilterChanged","enableReinitialize","initialValues","term","friend","String","onSubmit","values","setSubmitting","isSubmitting","htmlType","SearchOutlined","Option","updateObjectInArray","itemId","objPropName","newObjProps","isFetching","count","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","UsersPageWrapper","UserList","PaginatorWrapper","Pagination","useDispatch","history","useHistory","useEffect","parsed","queryString","location","search","substr","actualPage","actualFilter","Number","query","pathname","onPageChanged","pageNumber","userFollow","bind","userUnfollow","current","total","onChange","showSizeChanger","BackTopStyled","AppContentWrapper","Content","LoginFormWrapper","LoginFormField","reduxForm","form","handleSubmit","error","createField","InputField","undefined","className","formSummeryError","authAPI","email","password","rememberMe","captcha","delete","login","avatar","getAuthUserData","meData","myAvatar","authReducer","LoginFormHeader","LoginOutlined","formData","ProfilePage","lazy","NewsPage","FriendsPage","InfoPage","CommonChatPage","DialogsPage","SuspendedProfilePage","SuspendedNewsPage","SuspendedFriendsPage","SuspendedInfoPage","SuspendedCommonChatPage","SuspendedDialogsPage","withRouter","exact","path","render","UpOutlined","HeaderWrapper","Header","HeaderLogo","HeaderLogoWrapper","HeaderUserAvatarLink","Link","HeaderUserEmail","span","HeaderLogoLink","AppHeader","authorizedUserEmail","selectAuthorizedUserEmail","authorizedUserAvatar","selectAuthorizedUserAvatar","flex","Logo","MainFrameWrapper","Layout","GlobalPreloader","appReducer","getAuthUserDataPromise","Promise","all","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","news","title","imageUrl","summary","publishedAt","newsReducer","rootReducer","combineReducers","profilePage","friendsPage","newsPage","dialogsPage","chat","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Global","createGlobalStyle","ReactDOM","basename","process","document","getElementById","selectAuthorizedUserId","photoFile","console","log","FormData","append","FormControl","meta","touched","children","hasError","styles","formControl","Textarea","input","allowClear","validators","component","text","validate"],"mappings":"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","file":"static/js/main.f1ab59da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const PreloaderWrapper = styled.div`\r\n  position: absolute;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Preloader  = () => {\r\n    return <PreloaderWrapper>\r\n        <img src={preloader} alt=\"Preloader\"/>\r\n    </PreloaderWrapper>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__15Kb-\",\"error\":\"FormsControls_error__1LiuR\",\"formSummeryError\":\"FormsControls_formSummeryError__1Ler8\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n    return \"Заполните поле\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if (value && value.length > maxLength) return `Максимальная длина: ${maxLength} символов`;\r\n    return undefined;\r\n}","import {FormAction} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./store/redux-store\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\nimport {v4} from \"uuid\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: v4(), message: 'Это мой первый пост', likesCount: 5,\r\n            date: new Date(2021, 1, 21, 17, 55)},\r\n        {id: v4(), message: 'Всем привет', likesCount: 2,\r\n            date: new Date(2021, 3, 13, 13, 27)}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    editMode: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD_POST':\r\n            let newPost = {\r\n                id: v4(),\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n                date: new Date()\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case 'SN/PROFILE/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case 'SN/PROFILE/SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case 'SN/PROFILE/DELETE_POST':\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            };\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD_POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\r\n    deletePost: (postId: string) => ({type: 'SN/PROFILE/DELETE_POST', postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n}\r\n\r\nexport const getUserProfile = (userId: number | null): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.updateStatus(status);\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(actions.setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        toast.info(error)\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await profileAPI.savePhoto(file);\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(actions.savePhotoSuccess(data.data.photos));\r\n        }\r\n    } catch (error) {\r\n        toast.info(\"Отправленные данные некорректны\")\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const data = await profileAPI.saveProfile(profile)\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        if (userId != null) {\r\n            dispatch(await getUserProfile(userId))\r\n            toast.success('Данные профиля обновлены')\r\n        } else {\r\n            toast.info('userId can`t be null')\r\n        }\r\n    } else {\r\n        toast.info(data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/store/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype DispatchPropsType = {}\r\n\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = props => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to=\"/login\"/>\r\n\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n\r\n    return connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(\r\n        mapStateToPropsForRedirect, {})(RedirectComponent);\r\n}","import {instance, APIResponseType, GetItemsType} from \"./api\";\r\nimport {DialogMessageType} from \"../types/types\";\r\n\r\nexport const dialogsAPI = {\r\n    startDialog(userId: number) {\r\n        return instance.put<APIResponseType>(`dialogs/${userId}`).then(res => res.data);\r\n    },\r\n\r\n    getDialogs() {\r\n        return instance.get('dialogs').then(res => res.data);\r\n    },\r\n\r\n    getDialogMessages(userId: number) {\r\n        return instance.get<GetItemsType<DialogMessageType>>(`dialogs/${userId}/messages`).then(res => res.data);\r\n    },\r\n\r\n    sendDialogMessage(userId: number, body: string) {\r\n        return instance.post(`dialogs/${userId}/messages`, {body}).then(res => res.data);\r\n    },\r\n\r\n};\r\n","import {DialogMessageType, DialogType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./store/redux-store\";\r\nimport {FormAction} from \"redux-form\";\r\nimport {dialogsAPI} from \"../api/dialogs-api\";\r\n\r\nlet initialState = {\r\n    messages: [] as Array<DialogMessageType>,\r\n    dialogs: [] as Array<DialogType>,\r\n    selectedUser: 0 as number\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/DIALOGS/SET_DIALOGS\":\r\n            return {...state, dialogs: action.dialogs}\r\n        case \"SN/DIALOGS/SET_DIALOG_MESSAGES\":\r\n            return {...state, messages: action.messages}\r\n        case \"SN/DIALOGS/SET_SELECTED_USER\":\r\n            return {...state, selectedUser: action.userId}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setDialogs: (dialogs: Array<DialogType>) => ({type: 'SN/DIALOGS/SET_DIALOGS', dialogs} as const),\r\n    setDialogMessages: (messages: Array<DialogMessageType>) => ({type: 'SN/DIALOGS/SET_DIALOG_MESSAGES', messages} as const),\r\n    setSelectedUser: (userId: number) => ({type: 'SN/DIALOGS/SET_SELECTED_USER', userId} as const)\r\n}\r\n\r\nexport const startDialog = (userId: number): ThunkType => async () => {\r\n    await dialogsAPI.startDialog(userId);\r\n}\r\n\r\nexport const getDialogs = (): ThunkType => async (dispatch) => {\r\n    let data = await dialogsAPI.getDialogs();\r\n    dispatch(actions.setDialogs(data));\r\n}\r\n\r\nexport const getDialogMessages = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await dialogsAPI.getDialogMessages(userId);\r\n    dispatch(actions.setDialogMessages(data.items));\r\n    dispatch(actions.setSelectedUser(userId))\r\n}\r\n\r\nexport const sendDialogMessage = (userId: number, body: string): ThunkType => async (dispatch) => {\r\n    await dialogsAPI.sendDialogMessage(userId, body);\r\n    await dispatch(getDialogMessages(userId));\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","module.exports = __webpack_public_path__ + \"static/media/user.57b075ed.png\";","import {UserType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./store/redux-store\";\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    friends: [] as Array<UserType>\r\n}\r\n\r\nconst friendsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/FRIENDS/SET_FRIENDS':\r\n            return {...state, friends: action.friends}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setFriends: (friends: Array<UserType>) => ({type: 'SN/FRIENDS/SET_FRIENDS', friends} as const)\r\n}\r\n\r\nexport const requestFriends = (): ThunkType =>\r\n    async (dispatch) => {\r\n        let data = await usersAPI.getUsers(1, 100, '', true);\r\n        dispatch(actions.setFriends(data.items));\r\n    }\r\n\r\nexport default friendsReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType>","type MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\nexport type StatusType = 'pending' | 'ready' | 'error';\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subscribers['messages-received'].forEach(s => s(newMessages))\r\n};\r\n\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n};\r\n\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n};\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\n\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subscribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subscribers['messages-received'] = []\r\n        subscribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName].push(callback);\r\n        return () => {\r\n            // @ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}","import {FormAction} from \"redux-form\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./store/redux-store\";\r\nimport {chatAPI, ChatMessageAPIType, StatusType} from \"../api/chat-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {v4} from \"uuid\";\r\n\r\ntype ChatMessageType = ChatMessageAPIType & {id: string}\r\n\r\nlet initialState = {\r\n    messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n};\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/chat/MESSAGES_RECEIVED':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages.map( m => ({...m, id: v4() }))]\r\n                    .filter((m, index, array) => index >= array.length - 100)\r\n            }\r\n        case 'SN/chat/STATUS_CHANGED':\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        case 'SN/chat/CLEAN_OUT_MESSAGES':\r\n            return {\r\n                ...state,\r\n                messages: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    messagesReceived: (messages: ChatMessageAPIType[]) => ({\r\n        type: 'SN/chat/MESSAGES_RECEIVED', payload: {messages}\r\n    } as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: 'SN/chat/STATUS_CHANGED', payload: {status}\r\n    } as const),\r\n    cleanOutMessages: () => ({\r\n        type: 'SN/chat/CLEAN_OUT_MESSAGES'\r\n    } as const)\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(actions.messagesReceived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(actions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n}\r\n\r\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\r\n    await dispatch(actions.cleanOutMessages());\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    chatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType => async () => {\r\n    chatAPI.sendMessage(message);\r\n}\r\n\r\nexport default chatReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","module.exports = __webpack_public_path__ + \"static/media/github.19f49232.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.4989ae0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/vkontakte.b5870904.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.71da0f1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.aabb690e.svg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.3ba7224e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.07a0b701.svg\";","module.exports = __webpack_public_path__ + \"static/media/belarus.54f7e3da.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d614f5e.svg\";","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"daf39da5-e47d-49b8-9618-bc257b6a4144\"\r\n    }\r\n});\r\n\r\n//6395d35c-2111-4d92-a3c3-f0a81868a921 - nearthas\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\nexport type GetItemsType<D = {}> = {\r\n    items: Array<D>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}","import styled from \"styled-components\";\r\nimport {Footer} from \"antd/es/layout/layout\";\r\n\r\nexport const FooterWrapper = styled(Footer)`\r\n  text-align: center;\r\n  background-color: #e8e8ed\r\n`\r\nexport const AboutBlock = styled.div`\r\n  margin: 0 auto;\r\n  width: 500px;\r\n`\r\nexport const AboutBlockHeader = styled.h3`\r\n  margin: 0;\r\n  padding: 0 0 15px 0;\r\n  font-weight: lighter;\r\n  text-align: center;\r\n  font-size: 18px;\r\n`\r\nexport const IconsBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport const IconsBlockElement = styled.a`\r\n  outline: none;\r\n  padding-right: 10px;\r\n\r\n  &:last-child {\r\n    padding-right: 0;\r\n  }\r\n`\r\nexport const AboutBlockInfo = styled.div`\r\n  font-weight: lighter;\r\n  padding-top: 20px;\r\n`\r\n","import React, {FC} from \"react\";\r\nimport githubIcon from '../../assets/about/github.svg'\r\nimport linkedinIcon from '../../assets/about/linkedin.svg'\r\nimport vkIcon from '../../assets/about/vkontakte.svg'\r\nimport telegramIcon from '../../assets/about/telegram.svg'\r\nimport gmailIcon from '../../assets/about/gmail.svg'\r\nimport {\r\n    AboutBlock,\r\n    AboutBlockHeader,\r\n    AboutBlockInfo,\r\n    FooterWrapper,\r\n    IconsBlock,\r\n    IconsBlockElement} from \"./AppFooter.styled\";\r\n\r\nconst AppFooter: FC= () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <AboutBlock>\r\n                <AboutBlockHeader>\r\n                    Me in social\r\n                </AboutBlockHeader>\r\n                <IconsBlock>\r\n                    <IconsBlockElement href='https://github.com/aaxsti'>\r\n                        <img src={githubIcon} alt='github link icon'/>\r\n                    </IconsBlockElement>\r\n                    <IconsBlockElement href='https://linkedin.com/in/astapenko-maxim'>\r\n                        <img src={linkedinIcon} alt='linkedin link icon'/>\r\n                    </IconsBlockElement>\r\n                    <IconsBlockElement href='https://vk.com/bladerunner1'>\r\n                        <img src={vkIcon} alt='vk link icon'/>\r\n                    </IconsBlockElement>\r\n                    <IconsBlockElement href='https://t.me/astapenkomaxim'>\r\n                        <img src={telegramIcon} alt='telegram link icon'/>\r\n                    </IconsBlockElement>\r\n                    <IconsBlockElement href='mailto:3646824@gmail.com'>\r\n                        <img src={gmailIcon} alt='gmail link icon'/>\r\n                    </IconsBlockElement>\r\n                </IconsBlock>\r\n                <AboutBlockInfo>\r\n                    Social Network ©2021 Created by Maxim Astapenko\r\n                </AboutBlockInfo>\r\n            </AboutBlock>\r\n        </FooterWrapper>\r\n    )\r\n}\r\n\r\nexport default AppFooter;","import {AppStateType} from \"../redux/store/redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst app = (state: AppStateType) => state.app\r\n\r\nexport const selectInitialized = createSelector(\r\n    [app],\r\n    app => app.initialized\r\n)\r\n","import styled from \"styled-components\";\r\nimport {Menu} from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\n\r\nexport const MenuWrapper = styled(Menu)`\r\n  padding-top: 15px;\r\n  height: 100%;\r\n  border-radius: 2px;\r\n`\r\n\r\nexport const SidebarWrapper = styled(Sider)`\r\n  border-radius: 2px;\r\n`","import React from 'react';\r\nimport {Menu} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    ExceptionOutlined,\r\n    HeartOutlined,\r\n    HomeOutlined,\r\n    InfoCircleOutlined,\r\n    MessageOutlined,\r\n    UserOutlined, WechatOutlined\r\n} from \"@ant-design/icons\";\r\nimport {MenuWrapper, SidebarWrapper} from './AppSidebar.styled';\r\n\r\nconst AppSidebar = () => {\r\n    return (\r\n        <SidebarWrapper width={190}>\r\n            <MenuWrapper mode=\"inline\">\r\n                <Menu.Item key=\"1\">\r\n                    <Link to=\"/profile\">\r\n                        <HomeOutlined/>\r\n                        Моя страница\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <Link to=\"/friends\">\r\n                        <HeartOutlined/>\r\n                        Мои друзья\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <Link to=\"/news\">\r\n                        <ExceptionOutlined/>\r\n                        Новоости\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <Link to=\"/users\">\r\n                        <UserOutlined/>\r\n                        Пользователи\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"5\">\r\n                    <Link to=\"/dialogs\">\r\n                        <MessageOutlined/>\r\n                        Мессенджер\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"6\">\r\n                    <Link to=\"/commonChat\">\r\n                        <WechatOutlined />\r\n                        Общий чат\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Divider/>\r\n                <Menu.Item key=\"7\">\r\n                    <Link to=\"/info\">\r\n                        <InfoCircleOutlined />\r\n                        Информация\r\n                    </Link>\r\n                </Menu.Item>\r\n            </MenuWrapper>\r\n        </SidebarWrapper>\r\n    );\r\n}\r\n\r\nexport default AppSidebar;","import styled from \"styled-components\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nexport const SignUpFormWrapper = styled(Col)`\r\n  padding-right: 30px;\r\n`\r\n\r\nexport const SignUpFormElement = styled(Row)`\r\n  padding-bottom: 15px;\r\n`\r\n","import React, {FC} from \"react\";\r\nimport {Button, Col, DatePicker, Input, Radio, Row} from \"antd\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {EyeInvisibleOutlined, EyeTwoTone} from \"@ant-design/icons\";\r\nimport {SignUpFormElement, SignUpFormWrapper } from \"./SignUpForm.styled\";\r\n\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\nexport const SignUpForm: FC = () => {\r\n    return (\r\n        <form>\r\n            <Row>\r\n                <SignUpFormWrapper>\r\n                    <SignUpFormElement>\r\n                        <Input placeholder={'Email'}/>\r\n                    </SignUpFormElement>\r\n                    <SignUpFormElement>\r\n                        <Input.Password\r\n                            placeholder=\"Пароль\"\r\n                            iconRender={visible => (visible ? <EyeTwoTone/> : <EyeInvisibleOutlined/>)}\r\n                        />\r\n                    </SignUpFormElement>\r\n                    <SignUpFormElement>\r\n                        <Input.Password\r\n                            placeholder=\"Повторите пароль\"\r\n                            iconRender={visible => (visible ? <EyeTwoTone/> : <EyeInvisibleOutlined/>)}\r\n                        />\r\n                    </SignUpFormElement>\r\n                    <SignUpFormElement>\r\n                        <Input placeholder={'Имя'}/>\r\n                    </SignUpFormElement>\r\n                    <SignUpFormElement>\r\n                        <Input placeholder={'Фамилия'}/>\r\n                    </SignUpFormElement>\r\n                </SignUpFormWrapper>\r\n                <Col>\r\n                    <SignUpFormElement style={{width: 220}}>\r\n                        <Input placeholder={'Номер телефона'}/>\r\n                    </SignUpFormElement>\r\n                    <Row style={{paddingBottom: 23}}>\r\n                        <Row style={{paddingRight: 10, paddingTop: 6}}>Дата рождения :</Row>\r\n                        <DatePicker placeholder={'Выберите дату'} format={dateFormat}/>\r\n                    </Row>\r\n                    <SignUpFormElement>\r\n                        <Row style={{paddingRight: 30}}>Пол :</Row>\r\n                        <Radio.Group>\r\n                            <Radio value={1} style={{paddingRight: 20}}>Мужской</Radio>\r\n                            <Radio value={2}>Женский</Radio>\r\n                        </Radio.Group>\r\n                    </SignUpFormElement>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Button>Создать аккаунт</Button>\r\n                <NavLink to={'/login'}><Button type=\"link\">Уже есть аккаунт</Button></NavLink>\r\n            </Row>\r\n        </form>\r\n    )\r\n}\r\n","import React, {FC} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {UserAddOutlined} from \"@ant-design/icons\";\r\nimport {SignUpForm} from \"../../components/forms/SignUpForm/SignUpForm\";\r\nimport styled from \"styled-components\";\r\nimport {selectIsAuth} from \"../../selectors/auth-selectors\";\r\n\r\nexport const SignUpHeader = styled.h1`\r\n  padding-bottom: 8px;\r\n`\r\n\r\nexport const SignUpPage: FC = () => {\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Создать аккаунт &nbsp; &nbsp;<UserAddOutlined /></h1>\r\n            <SignUpForm/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nfunction withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <WrappedComponent {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\r\nimport ErrorSadPic from '../../assets/images/sad.svg'\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                404 NOT FOUND\r\n            </h2>\r\n            <img style={{width: '40px'}}\r\n                 src={ErrorSadPic}\r\n                 alt='404 Error'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ErrorPage);","import styled from \"styled-components\";\r\nimport Item from \"antd/es/list/Item\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nexport const UserItem = styled(Item)`\r\n  background-color: #f0f2f5;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.12);\r\n  margin-top: 15px;\r\n  border-radius: 2px;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n    background-color: #d4d7de;\r\n  }\r\n`\r\n\r\nexport const CountryFlagIcon = styled.img`\r\n  width: 15px;\r\n`\r\n\r\nexport const UserNameLink = styled(NavLink)`\r\n  color: black;\r\n  &:hover {\r\n    color: gray;\r\n  }\r\n`\r\n\r\nexport const UserListContent = styled(Col)`\r\n  padding-left: 30px;\r\n`\r\n\r\nexport const UserCountry = styled.div`\r\n  padding-top: 5px;\r\n`\r\n\r\nexport const UserItemRow = styled(Row)`\r\n  padding: 0 10px 0 10px;\r\n`\r\n\r\nexport const UserStatus = styled.p`\r\n  margin: 0;\r\n  padding: 0;\r\n  color: gray;\r\n  font-size: 13px;\r\n  word-wrap: break-word;\r\n  width: 600px;\r\n`","import React, {FC} from \"react\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {Avatar, Button, Col} from \"antd\";\r\nimport {UserAddOutlined, UserDeleteOutlined} from \"@ant-design/icons\";\r\nimport {\r\n    CountryFlagIcon,\r\n    UserCountry,\r\n    UserItem,\r\n    UserItemRow,\r\n    UserListContent,\r\n    UserNameLink,\r\n    UserStatus\r\n} from \"./User.styled\";\r\nimport BelarusFlag from \"../../assets/images/belarus.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nconst User: FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <UserItem>\r\n            <UserItemRow>\r\n                <Col>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <Avatar\r\n                            src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                            size={{xs: 24, sm: 32, md: 40, lg: 64, xl: 80, xxl: 80}}\r\n                        />\r\n                    </NavLink>\r\n                </Col>\r\n                <UserListContent>\r\n                    <UserNameLink to={'/profile/' + user.id}>\r\n                        <span>{user.name}</span>\r\n                    </UserNameLink>\r\n                    <UserStatus>\r\n                        {user.status ? user.status : ' '}\r\n                    </UserStatus>\r\n                    <UserCountry>\r\n                        <CountryFlagIcon\r\n                            src={BelarusFlag}\r\n                            alt={'Country flag'}/> Беларусь\r\n                    </UserCountry>\r\n                </UserListContent>\r\n                <Col>\r\n                    {user.followed\r\n                        ? <Button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id);\r\n                                  }}>\r\n                            <UserDeleteOutlined/></Button>\r\n\r\n                        : <Button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>\r\n                            <UserAddOutlined/></Button>\r\n                    }\r\n                </Col>\r\n            </UserItemRow>\r\n        </UserItem>\r\n    )\r\n}\r\n\r\nexport default React.memo(User);","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"../redux/store/redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter;\r\n}","import styled from \"styled-components\";\r\nimport {Input, Select} from \"formik-antd\";\r\n\r\nexport const SearchUserInput = styled(Input)`\r\n  width: 200px;\r\n`\r\n\r\nexport const SearchTermSelect = styled(Select)`\r\n  width: 160px;\r\n`\r\n","import {Form, Formik} from \"formik\";\r\nimport React, {FC} from \"react\";\r\nimport {FilterType} from \"../../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../../selectors/users-selectors\";\r\nimport Button from \"antd/lib/button\";\r\nimport {Select} from \"formik-antd\";\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\nimport {SearchTermSelect, SearchUserInput} from \"./UsersSearchForm.styled\";\r\n\r\ntype FriendFormType = \"true\" | \"false\" | \"null\";\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: FC<PropsType> = React.memo(({onFilterChanged}) => {\r\n        const filter = useSelector(getUsersFilter)\r\n\r\n        const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === \"null\" ? null : values.friend === \"true\"\r\n            }\r\n            onFilterChanged(filter)\r\n            setSubmitting(false)\r\n        }\r\n\r\n        return (\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{\r\n                    term: filter.term,\r\n                    friend: String(filter.friend) as FriendFormType\r\n                }}\r\n                onSubmit={submit}\r\n            >\r\n                {({isSubmitting}) => (\r\n                    <Form>\r\n                        <SearchUserInput name=\"term\"/>\r\n\r\n                        <Button htmlType=\"submit\" disabled={isSubmitting}>\r\n                            <SearchOutlined/>\r\n                        </Button>\r\n\r\n                        <SearchTermSelect name=\"friend\">\r\n                            <Select.Option value=\"null\">Все</Select.Option>\r\n                            <Select.Option value=\"true\">Только друзья</Select.Option>\r\n                            <Select.Option value=\"false\">Все кроме друзей</Select.Option>\r\n                        </SearchTermSelect>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        )\r\n    }\r\n)","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {APIResponseType, ResultCodesEnum} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {UserType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./store/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/users-api\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10 as number,\r\n    totalUsersCount: 0 as number,\r\n    currentPage: 1 as number,\r\n    isFetching: true as boolean,\r\n    followingInProgress: [] as Array<number>,    // array of user id`s\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case 'SN/USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({\r\n        type: 'SN/USERS/SET_CURRENT_PAGE',\r\n        currentPage\r\n    } as const),\r\n    setFilter: (filter: FilterType) => ({\r\n        type: 'SN/USERS/SET_FILTER',\r\n        payload: filter\r\n    } as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\nexport const requestUsers = (page: number,\r\n                             pageSize: number,\r\n                             filter: FilterType): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(page));\r\n        dispatch(actions.setFilter(filter));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize, filter.term, filter.friend);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => ActionsType) => {\r\n\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n\r\n    let data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType =>\r\n    async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.userFollow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n\r\nexport const unfollow = (userId: number): ThunkType =>\r\n    async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.userUnfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    }\r\n\r\nexport default usersReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype DispatchType = Dispatch<ActionsType>\r\ntype ThunkType = BaseThunkType<ActionsType>","import styled from \"styled-components\";\r\nimport {Pagination} from \"antd\";\r\n\r\nexport const UsersPageWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nexport const UserList = styled.div`\r\n  border-radius: 2px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const PaginatorWrapper = styled(Pagination)`\r\n  padding-top: 10px;\r\n`","import React, {FC, useEffect} from \"react\";\r\nimport User from \"../../components/Users/User\";\r\nimport {UsersSearchForm} from \"../../components/forms/UsersSearchForm/UsersSearchForm\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../selectors/users-selectors\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as queryString from \"querystring\";\r\nimport Preloader from \"../../components/common/Preloader/Preloader\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {PaginatorWrapper, UserList, UsersPageWrapper } from \"./UsersPage.styles\";\r\n\r\ntype PropsType = {}\r\n\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string };\r\n\r\nconst UsersPage: FC<PropsType> = () => {\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    if (!totalUsersCount) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter));\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter));\r\n    }\r\n\r\n    const userFollow = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    const userUnfollow = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n    return (\r\n        <UsersPageWrapper>\r\n            <h2><UserOutlined/> Пользователи ({totalUsersCount})</h2>\r\n\r\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n            <PaginatorWrapper\r\n                pageSize={pageSize}\r\n                current={currentPage}\r\n                total={totalUsersCount}\r\n                onChange={onPageChanged}\r\n                showSizeChanger={false}\r\n            />\r\n\r\n            <UserList>\r\n                    {users.map(u => <User\r\n                        user={u}\r\n                        key={u.id}\r\n                        followingInProgress={followingInProgress}\r\n                        unfollow={userUnfollow}\r\n                        follow={userFollow}\r\n                    />)}\r\n            </UserList>\r\n\r\n            <PaginatorWrapper\r\n                pageSize={pageSize}\r\n                current={currentPage}\r\n                total={totalUsersCount}\r\n                onChange={onPageChanged}\r\n                showSizeChanger={false}\r\n            />\r\n\r\n        </UsersPageWrapper>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(UsersPage);","import styled from \"styled-components\";\r\nimport {Content} from \"antd/es/layout/layout\";\r\n\r\nexport const BackTopStyled = styled.div`\r\n  height: 40px;\r\n  width: 40px;\r\n  line-height: 40px;\r\n  border-radius: 2px;\r\n  background-color: #1088e9;\r\n  color: #fff;\r\n  text-align: center;\r\n  font-size: 14px\r\n`\r\nexport const AppContentWrapper = styled(Content)`\r\n  border-radius: 2px;\r\n  margin: 0 0 0 50px;\r\n  padding: 30px;\r\n  min-height: 700px;\r\n  display: flex;\r\n  background-color: white\r\n`","import styled from \"styled-components\";\r\nimport {Row} from \"antd\";\r\n\r\nexport const LoginFormWrapper = styled(Row)`\r\n  width: 200px;\r\n`\r\n\r\nexport const LoginFormField = styled(Row)`\r\n  padding-bottom: 15px;\r\n`","import {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport style from \"../FormsControls/FormsControls.module.css\";\r\nimport {createField, GetStringKeys, InputField} from \"../FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport React, {FC} from \"react\";\r\nimport {LoginFormOwnProps, LoginFormValuesType} from \"../../../pages/LoginPage/LoginPage\";\r\nimport {Button} from \"antd\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LoginFormField, LoginFormWrapper } from \"./LoginForm.styled\";\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>;\r\n\r\nexport const LoginForm: FC<InjectedFormProps<LoginFormValuesType & LoginFormOwnProps> & LoginFormOwnProps> =\r\n    ({handleSubmit, error}) => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <LoginFormWrapper>\r\n                    <LoginFormField>\r\n                        {createField<LoginFormValuesTypeKeys>(\r\n                            \"Email\",\r\n                            \"email\",\r\n                            [required], InputField)\r\n                        }\r\n                    </LoginFormField>\r\n                    <LoginFormField>\r\n                        {createField<LoginFormValuesTypeKeys>(\r\n                            \"Пароль\",\r\n                            \"password\",\r\n                            [required],\r\n                            InputField,\r\n                            {type: \"password\"})}\r\n                    </LoginFormField>\r\n                    Запомнить меня &nbsp;\r\n                    <LoginFormField>\r\n                            {createField<LoginFormValuesTypeKeys>(\r\n                                undefined,\r\n                                \"rememberMe\",\r\n                                [],\r\n                                InputField,\r\n                                {type: \"checkbox\"},\r\n                                \"\")}\r\n                    </LoginFormField>\r\n                </LoginFormWrapper>\r\n\r\n                {error &&\r\n                <div className={style.formSummeryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n\r\n                <div>\r\n                    <Button htmlType=\"submit\">Войти</Button>\r\n                    <NavLink to={'/signup'}><Button type=\"link\">Создать аккаунт</Button></NavLink>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\nexport default reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm);","import {instance, APIResponseType} from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string,\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(res => res.data);\r\n    },\r\n};","import {ResultCodesEnum} from \"../api/api\";\r\nimport {FormAction} from \"redux-form\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./store/redux-store\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false as boolean,\r\n    avatar: null as string | null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/AUTH/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean, avatar: string | null) => ({\r\n        type: 'SN/AUTH/SET_USER_DATA', payload:\r\n            {userId, email, login, isAuth, avatar}\r\n    } as const),\r\n}\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let myAvatar = await profileAPI.getProfile(meData.data.id);\r\n        const avatar = myAvatar.photos.small;\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true, avatar));\r\n    }\r\n}\r\n\r\n    export const login = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        await dispatch(getAuthUserData());\r\n    } else {\r\n        toast.info(data.messages.length > 0 ? data.messages[0] : \"Some error\")\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false, null));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import React, {FC} from \"react\";\r\nimport LoginForm from \"../../components/forms/LoginForm/LoginForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {LoginOutlined} from \"@ant-design/icons\";\r\nimport {selectIsAuth} from \"../../selectors/auth-selectors\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LoginFormHeader = styled.h1`\r\n  padding-bottom: 8px;\r\n`\r\nexport type LoginFormOwnProps = {}\r\nexport type LoginFormValuesType = {\r\n    rememberMe: boolean\r\n    password: string\r\n    email: string\r\n}\r\n\r\nconst LoginPage: FC = () => {\r\n\r\n    const isAuth = useSelector(selectIsAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginFormHeader>Войти в аккаунт &nbsp; &nbsp;<LoginOutlined /></LoginFormHeader>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(LoginPage);","import React, {FC} from 'react';\r\nimport {Redirect, Route, RouteComponentProps, Switch, withRouter} from \"react-router-dom\";\r\nimport {SignUpPage} from \"../../pages/SignUpPage/SignUpPage\";\r\nimport {BackTop} from \"antd\";\r\nimport withSuspense from \"../../hoc/withSuspense\";\r\nimport {UpOutlined} from \"@ant-design/icons\";\r\nimport ErrorPage from \"../../pages/ErrorPage/ErrorPage\";\r\nimport UsersPage from '../../pages/UsersPage/UsersPage';\r\nimport {AppContentWrapper, BackTopStyled} from './AppContent.styled';\r\nimport LoginPage from \"../../pages/LoginPage/LoginPage\";\r\n\r\nconst ProfilePage = React.lazy(() => import('../../pages/ProfilePage/ProfilePage'))\r\nconst NewsPage = React.lazy(() => import('../../pages/NewsPage/NewsPage'))\r\nconst FriendsPage = React.lazy(() => import('../../pages/FriendsPage/FriendsPage'))\r\nconst InfoPage = React.lazy(() => import('../../pages/InfoPage/InfoPage'))\r\nconst CommonChatPage = React.lazy(() => import('../../pages/CommonChatPage/CommonChatPage'))\r\nconst DialogsPage = React.lazy(() => import('../../pages/DialogsPage/DialogsPage'))\r\n\r\nconst SuspendedProfilePage = withSuspense(ProfilePage)\r\nconst SuspendedNewsPage = withSuspense(NewsPage)\r\nconst SuspendedFriendsPage = withSuspense(FriendsPage)\r\nconst SuspendedInfoPage = withSuspense(InfoPage)\r\nconst SuspendedCommonChatPage = withSuspense(CommonChatPage)\r\nconst SuspendedDialogsPage = withSuspense(DialogsPage)\r\n\r\nconst AppContent: FC<PropsType> = () => {\r\n    return (\r\n        <AppContentWrapper>\r\n            <Switch>\r\n                <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                <Route path='/profile/:userId?' render={() => <SuspendedProfilePage/>}/>\r\n                <Route path='/news' render={() => <SuspendedNewsPage/>}/>\r\n                <Route path='/users' render={() => <UsersPage/>}/>\r\n                <Route path='/friends' render={() => <SuspendedFriendsPage/>}/>\r\n                <Route path='/login' render={() => <LoginPage/>}/>\r\n                <Route path='/signup' render={() => <SignUpPage/>}/>\r\n                <Route path='/dialogs' render={() => <SuspendedDialogsPage/>}/>\r\n                <Route path='/commonChat' render={() => <SuspendedCommonChatPage/>}/>\r\n                <Route path='/info' render={() => <SuspendedInfoPage/>}/>\r\n                <Route path='*' render={() => <ErrorPage/>}/>\r\n            </Switch>\r\n            <BackTop>\r\n                <BackTopStyled>\r\n                    <UpOutlined/>\r\n                </BackTopStyled>\r\n            </BackTop>\r\n        </AppContentWrapper>\r\n    );\r\n}\r\n\r\ntype PropsType = RouteComponentProps & {}\r\n\r\nexport default React.memo(withRouter(AppContent));","import styled from \"styled-components\";\r\nimport {Header} from \"antd/es/layout/layout\";\r\nimport {Col} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const HeaderWrapper = styled(Header)`\r\n  background-color: #979ea9;\r\n  border-bottom: #bac2ce;\r\n`\r\nexport const HeaderLogo = styled.img`\r\n  width: 40px;\r\n`\r\n\r\nexport const HeaderLogoWrapper = styled(Col)`\r\n  padding-left: 120px;\r\n`\r\n\r\nexport const HeaderUserAvatarLink = styled(Link)`\r\n  padding-right: 30px;\r\n`\r\n\r\nexport const HeaderUserEmail = styled.span`\r\n  padding-left: 63px;\r\n`\r\n\r\nexport const HeaderLogoLink = styled(Link)`\r\n  color: black;\r\n\r\n  &:hover {\r\n    color: #414141;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n","import React from 'react';\r\nimport {Avatar, Button, Col, Row} from \"antd\";\r\nimport Logo from \"../../assets/images/logo.svg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectAuthorizedUserAvatar, selectAuthorizedUserEmail, selectIsAuth} from \"../../selectors/auth-selectors\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {\r\n    HeaderLogo,\r\n    HeaderLogoLink,\r\n    HeaderLogoWrapper,\r\n    HeaderUserAvatarLink,\r\n    HeaderUserEmail,\r\n    HeaderWrapper} from './AppHeader.styled';\r\n\r\nconst AppHeader = () => {\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const authorizedUserEmail = useSelector(selectAuthorizedUserEmail)\r\n    const authorizedUserAvatar = useSelector(selectAuthorizedUserAvatar)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutCallback = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <Row>\r\n                <HeaderLogoWrapper flex=\"1 1 50px\">\r\n                    <HeaderLogo src={Logo} alt='App logo'/>\r\n                    <HeaderLogoLink to='/profile'>\r\n                        <HeaderUserEmail>{authorizedUserEmail} </HeaderUserEmail>\r\n                    </HeaderLogoLink>\r\n                </HeaderLogoWrapper>\r\n                {isAuth\r\n                    ? <>\r\n                        <Col flex=\"0 1 190px\">\r\n                            <HeaderUserAvatarLink to=\"/profile\">\r\n                                <Avatar src={authorizedUserAvatar} size={\"large\"}/>\r\n                            </HeaderUserAvatarLink>\r\n                            <Button onClick={logoutCallback}>\r\n                                Выйти\r\n                            </Button>\r\n                        </Col>\r\n                    </>\r\n                    : <Col flex=\"0 1 120px\">\r\n                        <Button>\r\n                            <Link to={'/login'}>\r\n                                Войти\r\n                            </Link>\r\n                        </Button>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </HeaderWrapper>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import styled from \"styled-components\";\r\nimport {Layout} from \"antd\";\r\n\r\nexport const MainFrameWrapper = styled(Layout)`\r\n  margin: 0 auto;\r\n  min-width: 1100px;\r\n  padding: 30px 0 0 0;\r\n`\r\n\r\nexport const GlobalPreloader = styled.div`\r\n  padding-left: 45%;\r\n  padding-top: 300px;\r\n`","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./store/redux-store\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state=  initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => async (dispatch) => {\r\n    let getAuthUserDataPromise = await dispatch(getAuthUserData());\r\n\r\n    Promise.all([getAuthUserDataPromise])\r\n        .then(() => {\r\n        dispatch(actions.initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;\r\n\r\ntype ThunkType = ThunkAction<any, AppStateType, unknown, ActionsType>\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionsTypes<typeof actions>","import React, {FC, useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {Layout} from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AppFooter from \"../AppFooter/AppFooter\";\r\nimport {selectInitialized} from \"../../selectors/app-selectors\";\r\nimport AppSidebar from \"../AppSidebar/AppSidebar\";\r\nimport AppContent from \"../AppContent/AppContent\";\r\nimport AppHeader from \"../AppHeader/AppHeader\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {GlobalPreloader, MainFrameWrapper} from './App.styled';\r\nimport {initializeApp} from \"../../redux/app-reducer\";\r\nimport {ToastContainer} from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport const App: FC = () => {\r\n    const initialized = useSelector(selectInitialized)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp())\r\n    }, [dispatch])\r\n\r\n    if (!initialized) {\r\n        return <GlobalPreloader><Preloader/></GlobalPreloader>\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <AppHeader/>\r\n            <MainFrameWrapper>\r\n                <AppSidebar/>\r\n                <AppContent/>\r\n            </MainFrameWrapper>\r\n            <AppFooter/>\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default React.memo(App);","import {NewsElementType} from \"../types/types\";\r\nimport {InferActionsTypes} from \"./store/redux-store\";\r\n\r\nlet initialState = {\r\n    news: [\r\n        {\r\n            title: 'Обновлен дизайн приложения',\r\n            imageUrl: 'https://sun9-69.userapi.com/impg/AxxeCAiyethb_wtRT_Mb5kKtcZzP03r3M4zGuA/7RUUWX60C9k.jpg?size=1654x920&quality=96&sign=63d3c45b9b712da473f1163dc399557a&type=album',\r\n            summary: `Была обнвлена страница профиля пользователя приложения, список пользователей, список друзей. Также \r\n                убраны баги связанные с профилем пользователя и списком друзей. На страницу профиля добавлено поле количества друзей \r\n                пользователя, исправлена работа лайков постов пользователя`,\r\n            publishedAt: '04-06-2021'\r\n        },\r\n        {\r\n            title: 'Добавлен поиск пользователей и пагинация',\r\n            imageUrl: 'https://sun9-36.userapi.com/impg/2vy2rXeYUR5uk6OsDvQNmSTknBXX0wKANjXVFA/wnNNnA_QZus.jpg?size=625x603&quality=96&sign=fa931ca45802a1ac04b2c0771bb6b496&type=album',\r\n            summary: `В раздел \"Пользователи\" было добавлено текстовое поле для поиска пользователей по имени и/или фамилии.\r\n                Помимо текстового поля был добавлен раскрывающийся список с фильтрами поиска, такими как: поиск по друзьям, поиск всех пользователей\r\n                а также поиск пользователей, которых нет у вас в друзьях.`,\r\n            publishedAt: '21-03-2021'\r\n        },\r\n        {\r\n            title: 'Добавлен раздел \"Мои друзья\"',\r\n            imageUrl: 'https://sun9-34.userapi.com/impg/AND3E6RAo3VSnpSB6H1bItI0rQyaDpFUDPdqqA/kvs3rbDenZk.jpg?size=1093x786&quality=96&sign=269ee2ce00b189f82f74706be94f6d14&type=album',\r\n            summary: `Создан раздел \"Мои друзья\" со списком добавленных пользователем друзей. Также разработана строка для поиска\r\n                друзей по имени и/или фамилии.`,\r\n            publishedAt: '04-04-2021'\r\n        },\r\n        {\r\n            title: 'Добавлена возможность создавать посты',\r\n            imageUrl: 'https://sun9-73.userapi.com/impg/xc9OitnHM3R2DYw6iqABWnjR3wDxv64bpkKaRA/bjunwNdyJC0.jpg?size=932x594&quality=96&sign=83d78f786cf9387b809f1c2bc8ef2545&type=album',\r\n            summary: `Добавлена возможность создавать посты на собственных страницах профиля. Также имеется возможность\r\n                \"лайкать\" созданные посты.`,\r\n            publishedAt: '25-02-2021'\r\n        }\r\n    ] as Array<NewsElementType>\r\n}\r\n\r\nconst newsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setNews: (data: Array<any>) => ({type: 'SN/NEWS/SET_NEWS', data} as const),\r\n}\r\n\r\nexport default newsReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"../profile-reducer\";\r\nimport dialogsReducer from \"../dialogs-reducer\";\r\nimport usersReducer from \"../users-reducer\";\r\nimport authReducer from \"../auth-reducer\";\r\nimport appReducer from \"../app-reducer\";\r\nimport chatReducer from \"../chat-reducer\";\r\nimport newsReducer from \"../news-reducer\";\r\nimport friendsReducer from \"../friends-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profilePage: profileReducer,\r\n    friendsPage: friendsReducer,\r\n    newsPage: newsReducer,\r\n    usersPage: usersReducer,\r\n    dialogsPage: dialogsReducer,\r\n    chat: chatReducer,\r\n    form: formReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;  // (globalState: GLOBALSTATE) => GLOBALSTATE\r\nexport type AppStateType = ReturnType<RootReducerType> // Type that return RootReducerType\r\n\r\nexport type InferActionsTypes<T> = T extends {[keys: string]: (...args: any[]) => infer U} ? U : never\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store","import {createGlobalStyle} from \"styled-components\";\r\n\r\nexport const Global = createGlobalStyle`\r\n  * {\r\n    box-sizing: content-box;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    scrollbar-width: thin;       \r\n    scrollbar-color: #a3cfff #dadcdf;\r\n  }\r\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App/App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Global} from \"./Global.styled\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <Global/>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));","import {AppStateType} from \"../redux/store/redux-store\";\r\nimport { createSelector } from 'reselect'\r\n\r\nconst auth = (state: AppStateType) => state.auth\r\n\r\nexport const selectIsAuth = createSelector(\r\n    [auth],\r\n    auth => auth.isAuth\r\n)\r\n\r\nexport const selectCurrentUserLogin = createSelector(\r\n    [auth],\r\n    auth => auth.login\r\n)\r\n\r\nexport const selectAuthorizedUserId = createSelector(\r\n    [auth],\r\n    auth => auth.userId\r\n)\r\n\r\nexport const selectAuthorizedUserAvatar = createSelector(\r\n    [auth],\r\n    auth => auth.avatar\r\n)\r\n\r\nexport const selectAuthorizedUserEmail = createSelector(\r\n    [auth],\r\n    auth => auth.email\r\n)","import {GetItemsType, instance, APIResponseType} from \"./api\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<GetItemsType<UserType>>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(res => res.data)\r\n    },\r\n    userFollow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    userUnfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n};","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {instance, APIResponseType} from \"./api\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/${userId}`).then(res => res.data)\r\n    },\r\n\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`).then(res => res.data)\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status}).then(res => res.data)\r\n    },\r\n\r\n    savePhoto(photoFile: File) {\r\n        console.log(photoFile)\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data)\r\n    }\r\n};","import React, {FC} from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\nimport {FieldValidatorType} from \"../../../utils/validators\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport {Input} from \"antd\";\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <span>\r\n                {children}\r\n            </span>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><TextArea {...input} {...restProps} allowClear/></FormControl>\r\n}\r\n\r\nexport const InputField: FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><Input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n                                                         name: FormKeysType,\r\n                                                         validators: Array<FieldValidatorType>,\r\n                                                         component: FC<WrappedFieldProps>,\r\n                                                         props = {},\r\n                                                         text = \"\") {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   component={component}\r\n                   validate={validators}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>"],"sourceRoot":""}